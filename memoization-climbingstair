//timecomplexity---0(n)

for recursive ==2(power) n

import java.util.*;
public class climbingstair{
    public static int  findno(int n,int dp[] )
    {
        if(n==1||n==0)
        {
            return 1;
        }
        if(dp[n]!=-1)
         {
            return dp[n];
         }
        int a=findno(n-1,dp);
        int b =findno(n-2,dp);
        return dp[n]=a+b;


    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int a=sc.nextInt();
        int dp[]=new int[a+1];
        Arrays.fill(dp,-1);
        System.out.print(findno(a,dp));

    }

}
